{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>kache is a modern cloud-native web accelerator and HTTP cache proxy that is highly available, reliable, and performant. It supports the latest RFC specifications and should be able to handle high traffic loads, be easily scalable, and support distributed caching systems.</p>"},{"location":"getting-started/","title":"Getting started","text":""},{"location":"license/","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2023 kache.io</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"intro/quick-start/","title":"Quick Start","text":"<p>The following describes how to run kache on a locally with Docker.</p>"},{"location":"intro/quick-start/#set-up-a-docker-compose","title":"Set up a docker-compose","text":"<p>Create and define a docker-compose.yml and define a kache service that uses the official Kache image:</p> <pre><code>services:\nkache:\n# Use the `main` tag for the latest development image \n# or `latest` tag for the latest stable version.\nimage: kacheio/kache:main\ncontainer_name: kache\n# Start the container with the mounted config file.\ncommand:\n- \"-config.file=/etc/kache/kache.sample.yml\"\n# Expose port that are configured in the kache config file.\nports:\n- \"80:80\"\n- \"8080:8080\"\n- \"1337:1337\"\n- \"1338:1338\"\n# Mount the config file.\nvolumes:\n- \"./../kache.sample.yml:/etc/kache/kache.sample.yml\"\n# Use redis as distributed remote caching backend.\nredis:\nimage: \"redis:alpine\"\n</code></pre> <p>That's all you need to run Kache with Redis as a distributed caching backend. </p>"},{"location":"intro/quick-start/#run-kache","title":"Run kache","text":"<p>Now start your HTTP cache with the following command:</p> <pre><code>docker-compose -f cloud/docker/docker-compose.yml up \n</code></pre>"},{"location":"intro/quick-start/#access-kache","title":"Access kache","text":"<p>You can now start browsing <code>http://localhost:8080/</code> and access Kache's API and get all the keys from the cache under <code>http://localhost:1338/api/v1/cache/keys</code>.</p>"},{"location":"reference/","title":"Reference","text":""},{"location":"setup/","title":"Setup","text":""}]}